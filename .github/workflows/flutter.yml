name: Sunflower Flutter CI/CD

on:
  push:
    branches:
      - "**" #trigger on all branches

  workflow_dispatch: # Allows manually triggering the workflow with inputs
    inputs:
      build_type:
        description: "Choose build type (apk or appbundle)"
        required: true
        default: "apk"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"

      - name: Install dependencies
        run: flutter pub get

      - name: Set build type as environment variable
        run: echo "BUILD_TYPE=${{ github.event.inputs.build_type }}" >> $GITHUB_ENV

      - name: Build APK or App Bundle
        run: |
          if [ -z "$BUILD_TYPE" ] || [ "$BUILD_TYPE" == "apk" ]; then
            flutter build apk --release --split-per-abi
          elif [ "$BUILD_TYPE" == "appbundle" ]; then
            flutter build appbundle --release
          fi

      - name: Upload APKs (if APK was built)
        if: ${{ env.BUILD_TYPE == 'apk' || env.BUILD_TYPE == '' }}
        uses: actions/upload-artifact@v3
        with:
          name: APKs
          path: |
            build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            build/app/outputs/flutter-apk/app-x86_64-release.apk

      - name: Upload App Bundle (if App Bundle was built)
        if: ${{ env.BUILD_TYPE == 'appbundle' }}
        uses: actions/upload-artifact@v3
        with:
          name: app-release.aab
          path: build/app/outputs/bundle/release/app-release.aab

      - name: Create Tag
        id: create_tag
        run: |
          TAG_NAME="v${{ github.run_number }}"
          echo "Creating tag: $TAG_NAME"
          git tag $TAG_NAME
          git push origin $TAG_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }} # Use the current ref (branch name or tag)
          name: Release ${{ github.ref }} # Set the release name
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts to Release
        if: ${{ env.BUILD_TYPE == 'apk' || env.BUILD_TYPE == '' }}
        uses: softprops/action-gh-release@v1
        with:
          tag: ${{ steps.create_tag.outputs.tag_name }} # Use the newly created tag
          files: |
            build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            build/app/outputs/flutter-apk/app-x86_64-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload App Bundle to Release
        if: ${{ env.BUILD_TYPE == 'appbundle' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.create_tag.outputs.tag_name }} # Use the newly created tag
          files: build/app/outputs/bundle/release/app-release.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
